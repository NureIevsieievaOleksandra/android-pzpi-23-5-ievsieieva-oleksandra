МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ




Звіт
з лабораторної роботи № 2 з дисципліни
Програмування під Android
   





Виконала:                                                                                     Перевірив:
ст. гр. ПЗПІ-23-5                        				ст. викладач кафедри ПІ
Євсєєва Олександра						Сокорчук Ігор Петрович









Харків 2024 
ЗАВДАННЯ

Розробити редактор, у якому з допомогою трьох регуляторів SeekBar встановлюється колір панелі.
Регулятори визначають RGB компоненти кольору панелі. Зовнішній вигляд екрану редактора повинен залежати від орієнтації пристроя. У портретній орієнтації пристроя, регулятори повинні знаходитися знизу від панелі, займати 1/3 висоти і розташовуватися на всю ширину екрану. У ланшафтній – праворуч від панелі і займати 1/3 ширини. Решту екрану повинна займати кольорова панель.
 
ХІД РОБОТИ

Cтворюємо новий проєкт та обираємо Empty Views Activity.
Спочатку зробимо розмітку для портретної та ландшафтної орієнтацій, щоб потім було простіше прив’язувати змінні до вже існуючих значень. Отже, відкриваємо файл activity_main.xml, та починаємо із вікна для відображення кольору:
1.<View
2.    android:id="@+id/panel"
3.    android:background="@color/black"
4.    android:layout_marginEnd="16dp"
5.    android:layout_width="0dp"
6.    android:layout_height="0dp"
7.    app:layout_constraintStart_toStartOf="parent"
8.    app:layout_constraintEnd_toEndOf="@id/guideline"
9.    app:layout_constraintTop_toTopOf="parent"
10.    app:layout_constraintBottom_toBottomOf="parent"
11.    />

Створюємо 3 регулятори seekBar та підписуємо кожен за допомогою TextView, за який колір він буде відповідати: червоний «R», зелений «G» та синій «B» [ДОДАТОК А].
Вирівнюємо згідно умови завдання, так щоб регулятори займали одну третину екранного простору. Це було зроблено за допомогою елемента GuideLine, що поділяє простір на приблизно третину.
Аналогічно створюємо розмітку для ландшафтної орієнтації [ДОДАТОК Б].
Коли розмітки було створено, можна переходити до основного наповнення. Відкриваємо MainActivity.java.
Спершу створимо змінні для збереження кольорового коду:
1.int r = 0;
2.int g = 0;
3.int b = 0;

Знаходимо за id панель для відображення кольору:
1.View panel = findViewById(R.id.panel);

Знаходимо за id кожен із регуляторів, за допомогою вбудованого метода onProgressChanged записуємо нове значення для змінної кольору. Змінюємо колір панелі на новий зо допомогою описаної пізніше функції parseColorInt
:
1.((SeekBar) findViewById(R.id.Rbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
2.    @Override
3.    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
4.        r = progress;
5.        panel.setBackgroundColor(parseColorInt(r,g,b));
6.    }

Аналогічно створюємо методи для кожного із регуляторів.
Тепер перейдемо до parseColorInt. Ця функція змінює формат трьох числових змінних на код RGB: “FFFFFF”:
1.int parseColorInt(int r, int g, int b) {
2.    String rHex = Integer.toHexString(r);
3.    String gHex = Integer.toHexString(g);
4.    String bHex = Integer.toHexString(b);
5.    if(rHex.length() < 2) {
6.        rHex = "0" + rHex;
7.    }
8.    if (gHex.length() < 2) {
9.        gHex = "0" + gHex;
10.    }
11.    if (bHex.length() < 2) {
12.        bHex = "0" + bHex;
13.    }
14.    String colorHex = "#" + rHex + gHex + bHex;
15.    return Color.parseColor(colorHex); }

У фунції створюються змінні із рядками, куди записуються числа, передані раніше з регуляторів. Якщо довжини рядків менше 2, тобто число має один розряд, то перед ним записується 0. Повертається рядок, що починається на «#». [ДОДАТОК В]
 
ВИСНОВКИ

Під час лабораторної роботи було закріплено знання з обробки подій при використанні регуляторів та відображення змін на екрані за допомогою елемента View.
Відеозвіт на YouTube. URL: https://youtu.be/z7Oz8yzEQjw 

 
ВИКОРИСТАНІ ДЖЕРЕЛА

1.	Документація SeekBar Android developers. URL: https://developer.android.com/reference/android/widget/SeekBar (дата звернення: 10.10.2024)
2.	Документація Guideline Android developers. URL: https://developer.android.com/reference/androidx/constraintlayout/widget/Guideline (дата звернення: 10.10.2024)
 
ДОДАТОК А

Файл розмітки для портерної орієнтаціїї.
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:padding="16dp"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <View
        android:id="@+id/panel"
        android:background="@color/black"
        android:layout_marginBottom="16dp"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintBottom_toTopOf="@id/guideline"/>

    <androidx.constraintlayout.widget.Guideline
        android:id="@+id/guideline"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        app:layout_constraintGuide_percent="0.7" />

    <TextView
        android:id="@+id/Rlabel"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="R"
        app:layout_constraintTop_toBottomOf="@id/guideline"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintBottom_toTopOf="@id/Glabel"
        app:layout_constraintVertical_chainStyle="spread"
        />

    <SeekBar
        android:id="@+id/Rbar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="@id/Rlabel"
        app:layout_constraintBottom_toBottomOf="@id/Rlabel"
        app:layout_constraintStart_toEndOf="@id/Rlabel"
        app:layout_constraintEnd_toEndOf="parent"
        android:min="0"
        android:max="255"/>


    <TextView
        android:id="@+id/Glabel"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="G"
        app:layout_constraintTop_toBottomOf="@id/Rlabel"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintVertical_chainStyle="spread"
        app:layout_constraintBottom_toTopOf="@id/Blabel"
        />

    <SeekBar
        android:id="@+id/Gbar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="@id/Glabel"
        app:layout_constraintBottom_toBottomOf="@id/Glabel"
        app:layout_constraintStart_toEndOf="@id/Glabel"
        app:layout_constraintEnd_toEndOf="parent"
        android:min="0"
        android:max="255"/>

    <TextView
        android:id="@+id/Blabel"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="B"
        app:layout_constraintTop_toBottomOf="@id/Glabel"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintVertical_chainStyle="spread"
        />

    <SeekBar
        android:id="@+id/Bbar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="@id/Blabel"
        app:layout_constraintBottom_toBottomOf="@id/Blabel"
        app:layout_constraintStart_toEndOf="@id/Blabel"
        app:layout_constraintEnd_toEndOf="parent"
        android:min="0"
        android:max="255"/>

</androidx.constraintlayout.widget.ConstraintLayout>
 
ДОДАТОК Б

Файл розмітки для ландшафтної орієнтаціїї.
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:padding="16dp"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <View
        android:id="@+id/panel"
        android:background="@color/black"
        android:layout_marginEnd="16dp"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="@id/guideline"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        />

    <androidx.constraintlayout.widget.Guideline
        android:id="@+id/guideline"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        app:layout_constraintGuide_percent="0.7" />

    <TextView
        android:id="@+id/Rlabel"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="R"
        app:layout_constraintStart_toEndOf="@id/guideline"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toTopOf="@id/Glabel"
        app:layout_constraintVertical_chainStyle="spread"
        />

    <SeekBar
        android:id="@+id/Rbar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="@id/Rlabel"
        app:layout_constraintBottom_toBottomOf="@id/Rlabel"
        app:layout_constraintStart_toEndOf="@id/Rlabel"
        app:layout_constraintEnd_toEndOf="parent"
        android:min="0"
        android:max="255"/>


    <TextView
        android:id="@+id/Glabel"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="G"
        app:layout_constraintVertical_chainStyle="spread"
        app:layout_constraintTop_toBottomOf="@id/Rlabel"
        app:layout_constraintStart_toStartOf="@id/guideline"
        app:layout_constraintBottom_toTopOf="@id/Blabel"
        />

    <SeekBar
        android:id="@+id/Gbar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="@id/Glabel"
        app:layout_constraintBottom_toBottomOf="@id/Glabel"
        app:layout_constraintStart_toEndOf="@id/Glabel"
        app:layout_constraintEnd_toEndOf="parent"
        android:min="0"
        android:max="255"/>

    <TextView
        android:id="@+id/Blabel"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="B"
        app:layout_constraintTop_toBottomOf="@id/Glabel"
        app:layout_constraintStart_toStartOf="@id/guideline"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintVertical_chainStyle="spread"
        />

    <SeekBar
        android:id="@+id/Bbar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        app:layout_constraintTop_toTopOf="@id/Blabel"
        app:layout_constraintBottom_toBottomOf="@id/Blabel"
        app:layout_constraintStart_toEndOf="@id/Blabel"
        app:layout_constraintEnd_toEndOf="parent"
        android:min="0"
        android:max="255"/>

</androidx.constraintlayout.widget.ConstraintLayout>
 
ДОДАТОК В

Код програми.
package ievsieieva.oleksandra.nure;

import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.SeekBar;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class MainActivity extends AppCompatActivity {
    private String TAG = MainActivity.class.toString();
    int r = 0;
    int g = 0;
    int b = 0;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
        View panel = findViewById(R.id.panel);


        ((SeekBar) findViewById(R.id.Rbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                r = progress;
                panel.setBackgroundColor(parseColorInt(r,g,b));
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        });

        ((SeekBar) findViewById(R.id.Gbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                g = progress;
                panel.setBackgroundColor(parseColorInt(r,g,b));
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        });

        ((SeekBar) findViewById(R.id.Bbar)).setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                b = progress;
                panel.setBackgroundColor(parseColorInt(r,g,b));
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        });
    }

    int parseColorInt(int r, int g, int b) {
        String rHex = Integer.toHexString(r);
        String gHex = Integer.toHexString(g);
        String bHex = Integer.toHexString(b);
        if(rHex.length() < 2) {
            rHex = "0" + rHex;
        }
        if (gHex.length() < 2) {
            gHex = "0" + gHex;
        }
        if (bHex.length() < 2) {
            bHex = "0" + bHex;
        }
        String colorHex = "#" + rHex + gHex + bHex;
        return Color.parseColor(colorHex);
    }

}

